---
title: "analyser validering nnrr"
format: html
editor: visual
---

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(nnrr)
library(dplyr)
library(tidyr)

datoTil <- "2024-06-30"
datoFra <- (as.Date(datoTil) - lubridate::years(2) + lubridate::days(1)) |>
  as.character()

datasti <- "C:/Users/kth200/OneDrive - Helse Nord RHF/Dokumenter/regdata/nnrr/"

legeskjema <-
  readr::read_csv2(
    paste0(datasti, "data_2025-03-26_0912.csv"))
pasientsvar_pre <-
  readr::read_csv2(
    paste0(datasti, "data_2025-03-26_0918.csv"))
pasientsvar_post <-
  readr::read_csv2(
    paste0(datasti, "data_2025-03-26_0924.csv"))
pasientsvar_post2 <-
  readr::read_csv2(
    paste0(datasti, "data_2025-03-26_0928.csv"))

filfolder <- "C:/Users/kth200/OneDrive - Helse Nord RHF/Dokumenter/regdata/nnrr/validering/"
fil1 <- paste0(filfolder, "Variabelliste.xlsx")

### Trekk ut liste over pasienter:

pasientsvar_post <- pasientsvar_post %>%
  mutate(LastUpdate = as.Date(LastUpdate, format="%d.%m.%Y")) %>%
  filter(LastUpdate == last(LastUpdate),
         SkjemaGUID == first(SkjemaGUID),
         .by = HovedskjemaGUID)
pasientsvar_post2 <- pasientsvar_post2 %>%
  mutate(LastUpdate = as.Date(LastUpdate, format="%d.%m.%Y")) %>%
  filter(LastUpdate == last(LastUpdate),
         SkjemaGUID == first(SkjemaGUID),
         .by = HovedskjemaGUID)

################################################################################


varliste_forbehandl <- readxl::read_xlsx(fil1, sheet = 1)
varliste_behandler <- readxl::read_xlsx(fil1, sheet = 2)
kodebok_pas <- readxl::read_xlsx(
  paste0(filfolder, "kodebok_nnrr_feb2024.xlsx"), sheet = 6)
kodebok_beh <- readxl::read_xlsx(
  paste0(filfolder, "kodebok_nnrr_feb2024.xlsx"), sheet = 7)
kodebok_verdier <- dplyr::bind_rows(kodebok_pas, kodebok_beh) %>%
  tidyr::separate(col = `Mulige verdier`,
                  into = c("value", "label"), sep = " = ") %>%
  dplyr::select(Variabelnavn, Felttype, value, label)

# which(!is.na(kodebok_verdier$Variabelnavn))
# which(diff(which(!is.na(kodebok_verdier$Variabelnavn))) > 1)


# 1. index

index1 <- which(!is.na(kodebok_verdier$Variabelnavn))[which(diff(which(!is.na(kodebok_verdier$Variabelnavn))) > 1)]
intervall <- diff(which(!is.na(kodebok_verdier$Variabelnavn)))[diff(which(!is.na(kodebok_verdier$Variabelnavn)))>1]

indeksering <- data.frame(indeks1 = (index1 + 1), indeks2 = (index1 + intervall - 1))

for (i in 1:dim(indeksering)[1]) {
  kodebok_verdier$Variabelnavn[indeksering$indeks1[i]:indeksering$indeks2[i]] <-
    kodebok_verdier$Variabelnavn[index1[i]]
  kodebok_verdier$Felttype[indeksering$indeks1[i]:indeksering$indeks2[i]] <-
    kodebok_verdier$Felttype[index1[i]]
}

kodebok <- dplyr::bind_rows(kodebok_pas, kodebok_beh) %>%
  dplyr::filter(!is.na(Felttype)) %>% dplyr::select(Variabelnavn, Felttype)

forbehandl <- c("PasientGUID", "HovedskjemaGUID", "S1b_DateOfCompletion",
                unique(varliste_forbehandl$Variabelnavn))
forbehandl <- forbehandl[!is.na(forbehandl)]

behandl <- c("SkjemaGUID", "S1b_DateOfCompletion", "PatientAge", "PatientGender",
             unique(varliste_behandler$Variabelnavn))
behandl <- behandl[!is.na(behandl)]

data_forbehandl <- pasientsvar_pre[, forbehandl] %>%
  mutate(Dato = as.Date(S1b_DateOfCompletion, format="%d.%m.%Y")) %>%
  dplyr::filter(Dato >= "2021-01-01",
                Dato <= "2023-06-30") %>%
  dplyr::select(-c(S1b_DateOfCompletion))
data_behandl <- legeskjema[, behandl] %>%
  mutate(Dato = as.Date(S1b_DateOfCompletion, format="%d.%m.%Y")) %>%
  dplyr::filter(Dato >= "2021-01-01",
                Dato <= "2023-06-30") %>%
  dplyr::select(-c(Dato, S1b_DateOfCompletion))

data_pre <- merge(data_forbehandl, data_behandl, by.x = "HovedskjemaGUID",
                  by.y = "SkjemaGUID", suffixes = c("_pas", "_beh"))

pasientsvar_post6mnd <- pasientsvar_post[, c("HovedskjemaGUID", "FormDate", "DateOfCompletion")]

data_pre <- merge(data_pre, pasientsvar_post6mnd,
                  by = "HovedskjemaGUID",
                  all.x = TRUE) %>%
  dplyr::mutate(Oppfolging = ifelse(is.na(DateOfCompletion), "Mangler_oppf", "Har_oppf"))

data_analyse <- data_pre |>
  mutate(alder_kat = cut(PatientAge, breaks = c(0, 30, 67, 140)),
         Kjonn = factor(PatientGender, levels = 1:2, labels = c("Mann", "Kvinne")),
         NationalCountry_lab = ifelse(NationalCountry==1, 1, 2),
         NationalCountry_lab = factor(NationalCountry_lab, levels = 1:2,
                                      labels = c("Norsk", "Ikke-norsk/ukjent")),
         oppf = relevel(as.factor(Oppfolging), "Mangler_oppf")
  )

var_kat <-c("S2_RetirementPension",
            "UhiQ31",
            "NationalCountry",
            "PainCausesSkeleton",
            "ReadWriteDifficulties",
            "UhiQ30",
            "Treatment_FollowUpOperation",
            "NationalInterpreter",
            "FamilyStatus",
            "Radiological_None",
            "CourseYellowFlagComplicatingFactors",
            "TreatmentEarlierOther",
            "UhiQ32",
            "S2_Student",
            "TreatmentEvaluationByPsychologist",
            "MedicationCFrequency",
            "UhiQ6",
            "Interpreter",
            "PhysicalActivity",
            "UhiQ24",
            "UhiQ12",
            "UhiQ3",
            "S2_StayAtHome",
            "UhiQ28")

data_analyse[var_kat] <- lapply(data_analyse[var_kat], factor)
var_num <-c("PatientAge",
            "NofPainRegions",
            "UHIIndex",
            "OwnChildren")

```

## Analyser katagoriske variabler: Aldersjustert

```{r}
for (p in 1:length(var_kat)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_kat[p], " + PatientAge")),
    data = data_analyse |> dplyr::filter(!!sym(var_kat[p]) != -1), family = "binomial")
  print(paste0(var_kat[p], ":"))
  print(summary(model1))
}

```

## Analyser katagoriske variabler: Kjønnsjustert

```{r}
for (p in 1:length(var_kat)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_kat[p], " + Kjonn")),
    data = data_analyse |> dplyr::filter(!!sym(var_kat[p]) != -1), family = "binomial")
  print(paste0(var_kat[p], ":"))
  print(summary(model1))
}

```

## Analyser katagoriske variabler: Alders- og kjønnsjustert

```{r}
for (p in 1:length(var_kat)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_kat[p], " + PatientAge + Kjonn")),
    data = data_analyse |> dplyr::filter(!!sym(var_kat[p]) != -1), family = "binomial")
  print(paste0(var_kat[p], ":"))
  print(summary(model1))
}

```


## Analyser numeriske variabler: Aldersjustert

```{r}

for (p in 1:length(var_num)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_num[p], " + PatientAge")),
    data = data_analyse |> dplyr::filter(!is.na( !!sym(var_num[p]) )), family = "binomial")
  print(paste0(var_num[p], ":"))
  print(summary(model1))
}
```

## Analyser numeriske variabler: Kjønnssjustert

```{r}

for (p in 1:length(var_num)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_num[p], " + Kjonn")),
    data = data_analyse |> dplyr::filter(!is.na( !!sym(var_num[p]) )), family = "binomial")
  print(paste0(var_num[p], ":"))
  print(summary(model1))
}
```

## Analyser numeriske variabler: Alders- og kjønnsjustert

```{r}

for (p in 1:length(var_num)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_num[p], " + PatientAge + Kjonn")),
    data = data_analyse |> dplyr::filter(!is.na( !!sym(var_num[p]) )), family = "binomial")
  print(paste0(var_num[p], ":"))
  print(summary(model1))
}
```

# Nye analyser: dikotomiserte variabler

```{r}
smnslaatt <- read.csv2(
  paste0(filfolder, "oppsummering_kategoriske_redigert_paindurationnow.csv"),
  fileEncoding = "Latin1") |>  
  filter(variable != "",
         Slaa_sammen != "") |> 
  dplyr::rename(variabel_id = variable,
                verdi = value,
                verditekst = Slaa_sammen)
  

erstatt_koder_m_etiketter <- function(df, mapping) {
  df_label <- df %>%  
    dplyr::mutate(
      dplyr::across(
        intersect(names(df), mapping$variabel_id), 
        ~ factor(.x, 
                 levels = dplyr::filter(mapping, 
                                        variabel_id %in% 
                                          dplyr::cur_column())$verdi,
                 labels = dplyr::filter(mapping, 
                                        variabel_id %in% 
                                          dplyr::cur_column())$verditekst))
    )
}

data_analyse_dikotom <- erstatt_koder_m_etiketter(data_analyse,smnslaatt)

var_kat <- intersect(var_kat, smnslaatt$variabel_id)

```

## Analyser dikotomiserte variabler: Aldersjustert

```{r}
for (p in 1:length(var_kat)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_kat[p], " + PatientAge")),
    data = data_analyse_dikotom |> dplyr::filter(!is.na(!!sym(var_kat[p]))), 
    family = "binomial")
  print(paste0(var_kat[p], ":"))
  print(summary(model1))
}

```

## Analyser dikotomiserte variabler: Kjønnsjustert

```{r}
for (p in 1:length(var_kat)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_kat[p], " + Kjonn")),
    data = data_analyse_dikotom |> dplyr::filter(!is.na(!!sym(var_kat[p]))), 
    family = "binomial")
  print(paste0(var_kat[p], ":"))
  print(summary(model1))
}

```

## Analyser dikotomiserte variabler: Alders- og kjønnsjustert

```{r}
for (p in 1:length(var_kat)){
  model1 <- glm(
    as.formula(paste0("oppf ~ ", var_kat[p], " + PatientAge + Kjonn")),
    data = data_analyse_dikotom |> dplyr::filter(!is.na(!!sym(var_kat[p]))), 
    family = "binomial")
  print(paste0(var_kat[p], ":"))
  print(summary(model1))
}

```
